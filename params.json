{
  "name": "multiple node.js versions",
  "tagline": ":honeybee: setup multiple node.js versions via nvm and cleanup old installations",
  "body": "![logo](https://github.frapsoft.com/top/nodejs-logo.png)\r\n\r\nMultiple Node Versions [![Open Source Love](https://badges.frapsoft.com/os/v1/open-source.svg?v=102)](https://github.com/ellerbrock/open-source-badge/) [![Gitter Chat](https://badges.gitter.im/frapsoft/frapsoft.svg)](https://gitter.im/frapsoft/frapsoft/)\r\n==============================================================================================================================================================================================================================================================\r\n\r\n**Quick and Dirty Setup for the lazy!**\r\n\r\nCleanup your old messed up Node.js installation and get you running with a new fresh and funky [nvm](https://github.com/creationix/nvm) enviroment with multiple Node Versions on OS X.\r\n\r\nYou can download the [setup.sh](https://github.com/ellerbrock/multiple-node-versions/blob/master/setup.sh) or run the Script directly via:\r\n\r\n`curl -s -L https://raw.githubusercontent.com/ellerbrock/multiple-node-versions/master/setup.sh -o setup.sh; bash setup.sh`\r\n\r\n![multiple node versions](https://github.frapsoft.com/screenshots/multiple-node-versions.jpg)\r\n\r\nFunctionality\r\n-------------\r\n\r\n-\tfind Node versions installed via Homebrew\r\n\r\n\t-\tuninstall this version?\r\n\r\n-\tdelete old Node, npm and nvm folders?\r\n\r\n-\tdownload and install nvm?\r\n\r\n-\tinstall Node LTS 4.4.5?\r\n\r\n\t-\tinstall node-gyp for this version?\r\n\t-\tinstall Typescript for this version?\r\n\t-\tinstall useful Development Tools for this version?\r\n\r\n-\tinstall Node latest version?\r\n\r\n\t-\tinstall node-gyp for this version?\r\n\t-\tinstall Typescript for this version?\r\n\t-\tinstall useful Development Tools for this version?\r\n\r\nCleanup\r\n-------\r\n\r\n```bash\r\nsudo rm -rf /usr/local/lib/node*\r\nsudo rm -f /usr/local/bin/npm\r\nsudo rm -f /usr/local/bin/node\r\nsudo rm -rf /usr/local/include/node*\r\nsudo rm -f /usr/local/share/man/man1/node.1\r\nsudo rm -f /var/db/receipts/org.nodejs.*\r\nsudo rm -rf ~/.npm\r\nsudo rm -rf ~/.nvm\r\nsudo rm -rf ~/.node-gyp\r\n```\r\n\r\nTypeScript Modules\r\n------------------\r\n\r\n-\t[TypeScript](https://www.npmjs.com/package/typescript) - TypeScript is a language for application scale JavaScript development\r\n-\t[tslint](https://www.npmjs.com/package/tslint) - An extensible static analysis linter for the TypeScript language\r\n-\t[typings](https://www.npmjs.com/package/typings) - The TypeScript Definition Manager.\r\n\r\nDevelopment Modules\r\n-------------------\r\n\r\n-\t[nodemon](https://www.npmjs.com/package/nodemon) - Monitor script for development of a node.js app.\r\n-\t[pm2](https://www.npmjs.com/package/pm2) - Production process manager for Node.JS applications with a built-in load balancer.\r\n-\t[node-inspector](https://www.npmjs.com/package/node-inspector) - Web Inspector based nodeJS debugger\r\n-\t[npm-check-updates](https://www.npmjs.com/package/npm-check-updates) - Find newer versions of dependencies than what your package.json or bower.json allows\r\n-\t[np](https://www.npmjs.com/package/np) - A better npm publish\r\n-\t[npm-name](https://www.npmjs.com/package/npm-name) - Check whether a package name is available on npm\r\n\r\nThis script is meant to be a skeleton. Best way to use it is to make a fork and change it for your individual needs with all the modules and versions you prefere. Your very welcome to make a pull request to bring more functionality ...\r\n\r\n### Optional Parameter\r\n\r\n-\t`setup.sh delnode` - run cleanup process\r\n-\t`setup.sh brewnode` - search for node installation via brew with uninstall option\r\n-\t`setup.sh nvm` - download and install nvm\r\n-\t`setup.sh modules` - install npm modules\r\n-\t`setup.sh nodelts` - install Node LTS 4.4.5\r\n-\t`setup.sh nodelatest` - install Node latest version\r\n\r\nor just run `./setup.sh` to walk through the steps ...\r\n\r\n### Source\r\n\r\n```bash\r\n#!/usr/bin/env bash\r\n#\r\n#   /$$$$$$$$                                                /$$$$$$   /$$\r\n#  | $$_____/                                               /$$__  $$ | $$\r\n#  | $$     /$$$$$$  /$$$$$$   /$$$$$$   /$$$$$$$  /$$$$$$ | $$  \\__//$$$$$$\r\n#  | $$$$$ /$$__  $$|____  $$ /$$__  $$ /$$_____/ /$$__  $$| $$$$   |_  $$_/\r\n#  | $$__/| $$  \\__/ /$$$$$$$| $$  \\ $$|  $$$$$$ | $$  \\ $$| $$_/     | $$\r\n#  | $$   | $$      /$$__  $$| $$  | $$ \\____  $$| $$  | $$| $$       | $$ /$$\r\n#  | $$   | $$     |  $$$$$$$| $$$$$$$/ /$$$$$$$/|  $$$$$$/| $$       |  $$$$/\r\n#  |__/   |__/      \\_______/| $$____/ |_______/  \\______/ |__/        \\___/\r\n#                            | $$\r\n#                            | $$\r\n#                            |__/\r\n#\r\n#   Developer     Maik Ellerbrock\r\n#   GitHub        https://github.com/ellerbrock\r\n#\r\n#   Company       Frapsoft Web Agency\r\n#\r\n#   Twitter       https://twitter.com/frapsoft\r\n#   Facebook      https://facebook.com/frapsoft\r\n#   Homepage      https://frapsoft.com\r\n#\r\n#   Version       1.0.0\r\n#\r\n#\r\n#   Information\r\n#   -----------\r\n#   Shell Script to install Node via nvm\r\n\r\n\r\n# Configuration\r\n# -------------\r\n\r\nNVM_URL=\"https://raw.githubusercontent.com/creationix/nvm/v0.31.1/install.sh \"\r\nBREW_PATH=\"/usr/local/bin/brew\"\r\nBREW_FOUND=false\r\nNVM_LOADED=false\r\n\r\n# Functions\r\n# ---------\r\n\r\nascii_font()\r\n{\r\nclear\r\necho ''\r\necho '                              $$\\'\r\necho '                              $$ |'\r\necho '    $$$$$$$\\   $$$$$$\\   $$$$$$$ | $$$$$$\\      $$\\  $$$$$$$\\'\r\necho '    $$  __$$\\ $$  __$$\\ $$  __$$ |$$  __$$\\     \\__|$$  _____|'\r\necho '    $$ |  $$ |$$ /  $$ |$$ /  $$ |$$$$$$$$ |    $$\\ \\$$$$$$\\'\r\necho '    $$ |  $$ |$$ |  $$ |$$ |  $$ |$$   ____|    $$ | \\____$$\\'\r\necho '    $$ |  $$ |\\$$$$$$  |\\$$$$$$$ |\\$$$$$$$\\ $$\\ $$ |$$$$$$$  |'\r\necho '    \\__|  \\__| \\______/  \\_______| \\_______|\\__|$$ |\\_______/'\r\necho '                                          $$\\   $$ |'\r\necho '                                          \\$$$$$$  |'\r\necho '                                           \\______/'\r\necho ''\r\necho 'Quick and Dirty Node.js Setup via nvm'\r\necho '====================================='\r\n}\r\n\r\n\r\nbrew_cleanup()\r\n{\r\n  echo \"\"\r\n  read -p \"search for brew node versions? (y/n) \" -n 1 answere\r\n  echo \"\"\r\n  if [[ $answere == \"y\" || $answere == \"Y\" ]]; then\r\n    if [ -x $BREW_PATH ]; then\r\n      for ver in `brew list -1 | grep ^node`\r\n        do\r\n          BREW_FOUND=true\r\n          echo \"\"\r\n          read -p \"uninstall $ver?? (y/n) \" -n 1 answere\r\n          if [[ $answere == \"y\" || $answere == \"Y\" ]]; then\r\n            echo \"\"\r\n            echo \"  => uninstalling $ver\"\r\n            brew uninstall $ver\r\n          fi\r\n        done\r\n\r\n        if [ $BREW_FOUND == false ]; then\r\n          echo \"\"\r\n          echo \"  => no node version installed with homebrew\"\r\n        fi\r\n\r\n        echo \"\"\r\n        read -p \"update and cleanup brew? (y/n) \" -n 1 answere\r\n        echo \"\"\r\n          if [[ $answere == \"y\" || $answere == \"Y\" ]]; then\r\n            echo \"  => updating and cleaning brew ...\"\r\n            brew prune && brew doctor\r\n            brew update && brew upgrade\r\n          fi\r\n    else\r\n      echo \"seems you dont have homebrew installed ...\"\r\n    fi\r\n  fi\r\n}\r\n\r\n\r\ndelete_node_folders()\r\n{\r\n  echo \"\"\r\n  read -p \"delete node, npm and nvm folders? (y/n) \" -n 1 answere\r\n  echo \"\"\r\n  if [[ $answere == \"y\" || $answere == \"Y\" ]]; then\r\n    echo \"  => deleting folders ...\"\r\n    sudo rm -rf /usr/local/lib/node*\r\n    sudo rm -f /usr/local/bin/npm\r\n    sudo rm -f /usr/local/bin/node\r\n    sudo rm -rf /usr/local/include/node*\r\n    sudo rm -f /usr/local/share/man/man1/node.1\r\n    sudo rm -f /var/db/receipts/org.nodejs.*\r\n    sudo rm -rf ~/.npm\r\n    sudo rm -rf ~/.nvm\r\n    sudo rm -rf ~/.node-gyp\r\n  fi\r\n}\r\n\r\n\r\ninstall_nvm()\r\n{\r\n  echo \"\"\r\n  read -p \"install nvm? (y/n) \" -n 1 answere\r\n  echo \"\"\r\n  if [[ $answere == \"y\" || $answere == \"Y\" ]]; then\r\n    echo \"  => installing nvm ...\"\r\n    curl -o- $NVM_URL| bash\r\n    set_nvm_env\r\n  fi\r\n}\r\n\r\n\r\ninstall_node_lts()\r\n{\r\n  test $NVM_LOADED || set_nvm_env\r\n\r\n  echo \"\"\r\n  read -p \"install node 4.4.5 lts? (y/n) \" -n 1 answere\r\n  echo \"\"\r\n  if [[ $answere == \"y\" || $answere == \"Y\" ]]; then\r\n    echo \"  => installing node lts ...\"\r\n    nvm install 4.4.5\r\n    nvm alias lts 4.4.5\r\n    nvm use lts\r\n    npm update && npm upgrade -g\r\n  fi\r\n}\r\n\r\n\r\ninstall_node_latest()\r\n{\r\n  test $NVM_LOADED || set_nvm_env\r\n\r\n  echo \"\"\r\n  read -p \"install node latest version? (y/n) \" -n 1 answere\r\n  echo \"\"\r\n  if [[ $answere == \"y\" || $answere == \"Y\" ]]; then\r\n    echo \"  => installing node latest ...\"\r\n    nvm install node\r\n    nvm alias default node\r\n    nvm alias latest node\r\n    nvm alias latest node\r\n    nvm use node\r\n    npm update && npm upgrade -g\r\n  fi\r\n}\r\n\r\n\r\ninstall_modules()\r\n{\r\n  test $NVM_LOADED || set_nvm_env\r\n  ver=`nvm current`\r\n\r\n  echo \"\"\r\n  read -p \"install node-gyp for node $ver? (y/n) \" -n 1 answere\r\n  echo \"\"\r\n  if [[ $answere == \"y\" || $answere == \"Y\" ]]; then\r\n    echo \"  => installing node-gyp for node version $ver ...\"\r\n    npm i -g node-gyp\r\n  fi\r\n\r\n  echo \"\"\r\n  read -p \"install some useful development tools for node $ver? (y/n) \" -n 1 answere\r\n  echo \"\"\r\n  if [[ $answere == \"y\" || $answere == \"Y\" ]]; then\r\n    echo \"  => installing developer modules for node $ver ...\"\r\n    npm i -g npm-check-updates np npm-name nodemon pm2 node-inspector\r\n  fi\r\n\r\n  echo \"\"\r\n  read -p \"install typescript for node $ver? (y/n) \" -n 1 answere\r\n  echo \"\"\r\n  if [[ $answere == \"y\" || $answere == \"Y\" ]]; then\r\n    echo \"  => installing typescript for node version $ver ...\"\r\n    npm i -g typescript@next tslint@next typings\r\n  fi\r\n}\r\n\r\n\r\nset_nvm_env()\r\n{\r\n  if [ -f \"$NVM_DIR/nvm.sh\" ]; then\r\n    source $NVM_DIR/nvm.sh\r\n    NVM_LOADED=true\r\n  else\r\n    echo \"cant load the nvm enviroment. is nvm installed?\"\r\n  fi\r\n}\r\n\r\n# run script\r\nascii_font\r\n\r\ncase \"$1\" in\r\n  delnode)\r\n    delete_node_folders\r\n  ;;\r\n  brewnode)\r\n    brew_cleanup\r\n  ;;\r\n  nvm)\r\n    install_nvm\r\n  ;;\r\n  modules)\r\n    install_modules\r\n  ;;\r\n  nodelts)\r\n    install_node_lts\r\n  ;;\r\n  nodelatest)\r\n    install_node_latest\r\n  ;;\r\n  *)\r\n    set_nvm_env\r\n    brew_cleanup\r\n    delete_node_folders\r\n    install_nvm\r\n    install_node_lts\r\n    install_modules\r\n    install_node_latest\r\n    install_modules\r\n  ;;\r\nesac\r\n```\r\n### Contact / Social Media\r\n\r\n*Get the latest News about Web Development, Open Source, Tooling, Server & Security*\r\n\r\n[![Twitter](https://github.frapsoft.com/social/twitter.png)](https://twitter.com/frapsoft/)[![Facebook](https://github.frapsoft.com/social/facebook.png)](https://www.facebook.com/frapsoft/)[![Google+](https://github.frapsoft.com/social/google-plus.png)](https://plus.google.com/116540931335841862774)[![Gitter](https://github.frapsoft.com/social/gitter.png)](https://gitter.im/frapsoft/frapsoft/)[![Github](https://github.frapsoft.com/social/github.png)](https://github.com/ellerbrock/)\r\n\r\n### Development by\r\n\r\nDeveloper / Author: [Maik Ellerbrock](https://github.com/ellerbrock/)  \r\nCompany: [Frapsoft](https://github.com/frapsoft/)\r\n\r\n### License \r\n\r\nCopyright (c) 2016 [Maik Ellerbrock](https://github.com/ellerbrock/)  \r\n\r\n[![MIT Licence](https://badges.frapsoft.com/os/mit/mit-125x28.png?v=102)](https://opensource.org/licenses/mit-license.php)  \r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}